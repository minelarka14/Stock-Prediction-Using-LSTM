{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Styles","navLink","color","fontWeight","textDecoration","navBrand","fontSize","navLinkActive","indexDiv","paddingTop","position","top","left","maxWidth","textAlign","fontFamily","App","props","state","page","handleIndexPage","bind","handleContactPage","handleLicencePage","end","this","setState","className","style","backgroundColor","rel","href","integrity","crossorigin","src","onClick","download","class","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","body","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eff41dcc.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst Styles = {\n  navLink: {\n    color: \"white\",\n    fontWeight: \"400\",\n    textDecoration: \"inherit\",\n  },\n  navBrand: {\n    fontWeight: 'bold',\n    color: 'white',\n    fontSize: '20px',\n    textDecoration: \"inherit\",\n  },\n  navLinkActive: {\n    color: \"white\",\n    fontWeight: \"650\",\n    textDecoration: \"inherit\",\n  },\n  indexDiv: {\n    paddingTop: \"2%\",\n    position: \"absolute\",\n    top: \"10%\",\n    left: \"5%\",\n    color: \"white\",\n    maxWidth: \"50%\",\n    fontSize: \"20px\",\n    textAlign: \"justify\",\n    fontFamily: \"Montserrat\",\n  },\n}\nconst IndexPage = props => {\n  return (\n    <div style={Styles.indexDiv}>\n      <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@500&display=swap\" rel=\"stylesheet\"></link>\n      <p>This is a machine learning algorithm made with tensorflow and python. This was made for\n      our open theme badge for scouts. It uses long short term memory as the name implies and uses tkinter and\n                matplotlib for the GUI and visualisation. </p>\n      <br />\n      <p> We created this project using The open theme badge requirements:</p> <br />\n      <ul>\n        <li>Decide to pursue any area of interest or skill he / she is interested in that broadly covers a\n                    certain theme or category such as sports, aeronautics, science, performing arts, etc. <br /></li>\n        <br />\n        <li>\n          Identify an area that is not covered by the existing syllabus of the Scout Proficiency Badges\n          and\n          submit a write-up or proposal of the project he/ she would like to do to the National Scout\n                    Roundtable, with support from the Scout Leader</li>\n      </ul>\n    </div>\n  );\n}\n\nconst ContactPage = props => {\n  return (\n    <div>\n      <div className=\"contact\">\n        <br />\n        <p style={Styles.indexDiv}> Email us at: <br /><br />\n                            muhammadosaid06@gmail <br />\n                            chew_ming_hong_ethan@s2019.ssts.edu.sg\n            </p>\n      </div>\n    </div>\n  );\n}\n\nconst LicencePage = props => {\n  return (\n    <div class=\"licencediv\" style={Styles.indexDiv}>\n      <p class=\"licencetext\">MIT License\n                <br />\n        <br />\n                Copyright (c) 2020 Muhammad Osaid and Ethan Chew\n            </p>\n      <br />\n      <p>Permission is hereby granted, free of charge, to any person obtaining a copy\n      of this software and associated documentation files (the \"Software\"), to deal\n      in the Software without restriction, including without limitation the rights\n      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n      copies of the Software, and to permit persons to whom the Software is\n                furnished to do so, subject to the following conditions:</p>\n      <p>\n        <br />\n                The above copyright notice and this permission notice shall be included in all\n                copies or substantial portions of the Software.</p>\n      <br />\n      <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n      OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n                SOFTWARE.</p>\n      <br />\n      <p>Any opinions, chats, messages, news, research, analyses, prices, or other information contained on this\n      project are provided as general market information for educational and entertainment purposes only, and\n      do not constitute investment advice. The program should not be relied upon as a substitute for extensive\n      independent market research before making your actual trading decisions. Opinions, market data,\n      recommendations or any other content is subject to change at any time without notice. The contributers\n      will not accept liability for any loss or damage, including without limitation any loss of profit, which\n                may arise directly or indirectly from use of or reliance on such information.</p>\n      <br />\n      <br />\n      <br />\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0\n    }\n    this.handleIndexPage = this.handleIndexPage.bind(this);\n    this.handleContactPage = this.handleContactPage.bind(this);\n    this.handleLicencePage = this.handleLicencePage.bind(this);\n  };\n  handleIndexPage(end) {\n    this.setState({\n      page: 0\n    });\n  }\n  handleContactPage(end) {\n    this.setState({\n      page: 1\n    });\n  }\n  handleLicencePage(end) {\n    this.setState({\n      page: 2\n    });\n  }\n  render(props) {\n    return (\n      <div className=\"AppMain\" style={{ backgroundColor: \"#24252a\" }}>\n        <div className=\"bs4-setup\">\n          <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\" crossorigin=\"anonymous\" />\n          <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\" integrity=\"sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV\" crossorigin=\"anonymous\" />\n          <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\" />\n          <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\" integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\" crossorigin=\"anonymous\" />\n        </div>\n        <div>\n          <div className=\"navbar navbar-expand-sm bg-dark\">\n            <ul className=\"navbar-nav\">\n              <li onClick={this.handleIndexPage} className=\"navbar-brand\"><a href=\"#\" style={this.state.page == 0 ? Styles.navLinkActive : Styles.navLink}>LSTMScouts</a></li>\n              <li onClick={this.handleContactPage} className=\"nav-link\"><a href=\"#\" style={this.state.page == 1 ? Styles.navLinkActive : Styles.navLink}>Contact us</a></li>\n              <li onClick={this.handleLicencePage} className=\"nav-link\"><a href=\"#\" style={this.state.page == 2 ? Styles.navLinkActive : Styles.navLink}>Licence</a></li>\n              <li className=\"nav-link\"><a href=\"../data/LSTMScouts.zip\" download style={Styles.navLink}>Download</a></li>\n            </ul>\n          </div>\n          <div>\n            {this.state.page == 0 ? IndexPage() : this.state.page == 1 ? ContactPage() : this.state.page == 2 ? LicencePage() : null}\n          </div>\n        </div>\n      </div >\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\ndocument.body.style = 'background: #24252a;'\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}